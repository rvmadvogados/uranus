
@{
    ViewBag.Title = "Processos \\ Enviar Planilhas E-PROC";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title">
                <h2>Envio de Multiplas Planilhas E-PROC</h2>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                <p>
                    Arraste várias planilhas E-PROC para a caixa abaixo para envio múltiplo ou clique para selecionar as planilhas.
                </p>
                <form id="myAwesomeDropzone" action="~/Processos/FileUpload" class="dropzone" style="border: 1px solid #e5e5e5; height: 300px;"></form>
            </div>
        </div>
    </div>
</div>

<div id="custom_notifications" class="custom-notifications dsp_none">
    <ul class="list-unstyled notifications clearfix" data-tabbed_notifications="notif-group">
    </ul>
    <div class="clearfix"></div>
    <div id="notif-group" class="tabbed_notifications"></div>
</div>

<!-- chart js -->
<script src="~/Scripts/chartjs/chart.min.js"></script>

<!-- bootstrap progress js -->
<script src="~/Scripts/progressbar/bootstrap-progressbar.min.js"></script>
<script src="~/Scripts/nicescroll/jquery.nicescroll.min.js"></script>

<!-- icheck -->
<script src="~/Scripts/icheck/icheck.min.js"></script>

<!-- dropzone -->
<script src="~/Scripts/dropzone/dropzone.js"></script>

<script>

    //Dropzone.options.myAwesomeDropzone = {
    //    paramName: "file", // The name that will be used to transfer the file
    //    maxFilesize: 5, // MB
    //    method: "post",
    //    uploadMultiple: true,
    //    acceptedFiles: ".xls",
    //    autoProcessQueue: false,
    //    init: function () {
    //        myDropzone = this;
    //        var submitButton = document.querySelector("#submit-all");
    //        var removeButton = document.querySelector("#remove-all");

    //        submitButton.addEventListener("click", function () {
    //            myDropzone.processQueue(); // Tell Dropzone to process all queued files.
    //        });
    //        removeButton.addEventListener("click", function () {
    //            myDropzone.removeAllFiles();
    //            submitButton.removeAttribute("disabled");
    //        });
    //        this.on("addedfile", function (file) {
    //        });
    //        this.on("sendingmultiple", function (file) {
    //            // And disable the start button
    //            submitButton.setAttribute("disabled", "disabled");
    //        });
    //        this.on("completemultiple", function (file) {
    //            if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {
    //                submitButton.removeAttribute("disabled");
    //            }
    //        });
    //        this.on("successmultiple", function (file, response) {
    //            console.log(response);
    //            $(response).each(function (index, element) {
    //                if (element.status) {
    //                    $("body").prepend('<div class="alert alert-success alert-dismissable">' +
    //                        '<a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>' +
    //                        '<strong>Success! </strong> ' + element.fileName + ' was uploaded successfully</div>');
    //                }
    //                else {
    //                    $("body").prepend('<div class="alert alert-danger alert-dismissable">' +
    //                        '<a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>' +
    //                        '<strong>Error!</strong> ' + element.message + '</div >');
    //                }
    //            });
    //            submitButton.removeAttribute("disabled");
    //        });
    //        this.on("error", function (file, errorMessage) {
    //            $("body").prepend('<div class="alert alert-danger alert-dismissable">' +
    //                '<a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>' +
    //                '<strong>Error!</strong> ' + errorMessage + '</div >');
    //            submitButton.removeAttribute("disabled");
    //        });
    //    }
    //};



    // "myAwesomeDropzone" is the camelized version of the HTML element's ID
    Dropzone.options.myAwesomeDropzone = {
        paramName: "file", // The name that will be used to transfer the file
        maxFilesize: 5, // MB
        acceptedFiles: ".xls",
        success: function (file, response) {

            if (response.success) {
                // Do what you want to do with your response
                // This return statement is necessary to remove progress bar after uploading.
                $(file.previewElement).find('.dz-success-message').text(response.response);
                return file.previewElement.classList.add("dz-success");
            }
            else {
                $(file.previewElement).find('.dz-error-message').text(response.response);
                return file.previewElement.classList.add("dz-error");

            }

        }
    };

    Dropzone.prototype.defaultOptions.dictDefaultMessage = "Solte os arquivos aqui para enviar";
    Dropzone.prototype.defaultOptions.dictFallbackMessage = "Seu navegador não oferece suporte para enviar de arquivos arrastar e soltar.";
    Dropzone.prototype.defaultOptions.dictFallbackText = "Use o formulário substituto abaixo para enviar seus arquivos, como antigamente.";
    Dropzone.prototype.defaultOptions.dictFileTooBig = "O arquivo é muito grande ({{filesize}}MiB). Tamanho máximo do arquivo: {{maxFilesize}}MiB.";
    Dropzone.prototype.defaultOptions.dictInvalidFileType = "Você não pode fazer envios de arquivos deste tipo.";
    Dropzone.prototype.defaultOptions.dictResponseError = "O servidor respondeu com o código {{statusCode}}.";
    Dropzone.prototype.defaultOptions.dictCancelUpload = "Cancelar envio";
    Dropzone.prototype.defaultOptions.dictCancelUploadConfirmation = "Tem certeza de que deseja cancelar este envio?";
    Dropzone.prototype.defaultOptions.dictRemoveFile = "Remover arquivo";
    Dropzone.prototype.defaultOptions.dictMaxFilesExceeded = "Você não pode enviar mais arquivos.";

</script>